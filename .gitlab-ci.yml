image: maven:latest
types:  
  - compile
  - test
  - build-package

before_script:
  # Setup proxy
  - export http_proxy=http://194.138.0.3:9400
  - export https_proxy=http://194.138.0.3:9400
  
  # Install build dependencies
  - apt-get -qq update && apt-get -qq -y install lsb-release sudo  php5-curl libpq-dev libdbd-sqlite3-perl libspreadsheet-writeexcel-perl debhelper && utils/fo-installdeps -e -y
  - apt-get -qq -y install postgresql postgresql-server-dev-all cppcheck php5-pgsql sqlite3 php5-sqlite libsqlite3-0 libsqlite3-dev 
  - apt-get install -qq -y debhelper libglib2.0-dev libmagic-dev libxml2-dev
  - apt-get install -qq -y libtext-template-perl librpm-dev  rpm libpcre3-dev libssl-dev
  - apt-get install -qq -y apache2 libapache2-mod-php5 php5-pgsql php-pear php5-cli
  - apt-get install -qq -y binutils bzip2 cabextract cpio sleuthkit genisoimage poppler-utils
  - apt-get install -qq -y rpm upx-ucl unrar-free unzip p7zip-full p7zip wget git-core subversion
  - apt-get install -qq -y libpq-dev libcunit1-dev libcppunit-dev
  - apt-get install -qq -y libboost-regex-dev libboost-program-options-dev
  - apt-get install -y liblocal-lib-perl

  # TO resolve ninka build dependency
  - git clone --branch release-1.1104 https://github.com/dagolden/IO-CaptureOutput.git
  - cd IO-CaptureOutput && perl Makefile.PL && make && make test && make install && cd ..
  - rm -rf IO-CaptureOutput

  # Create and patch FOSSology cache
  - mkdir -p /var/local/cache/fossology && chown $(whoami) /var/local/cache/fossology
  
  # Install composer
  - mv install/composer /usr/local/bin/composer
  
  # Install composer dependencies
  - cd src
  - composer install --dev
  - cd vendor/ && git clone https://github.com/dmgerman/ninka.git && cd ninka/ && perl Makefile.PL && make && make install && cd ../..
  - cd ..
  - install/scripts/install-spdx-tools.sh
  
  # Create postgres DB
  - /etc/init.d/postgresql start
  - /etc/init.d/postgresql status

  - sudo -u postgres psql -c "CREATE USER fossy WITH PASSWORD 'fossy' CREATEDB" 
  - sudo -u postgres psql -c "CREATE DATABASE fossology OWNER fossy"
  
compile:
  type : compile
  script:
    - make

C-test:
  type : test
  script:
    - make all test-lib test-monk test-nomos
    - cppcheck -q -isrc/nomos/agent_tests/testdata/NomosTestfiles/ -isrc/testing/dataFiles/ src/

PHPCPD-test:
  type : test
  script:
    - src/vendor/bin/phpcpd src/cli/ src/copyright/ src/decider*/ src/lib/ src/monk/ src/nomos/ src/readmeoss/ src/spdx2/ src/www/
  allow_failure: true

PHPCS-test:
  type : test
  script:
    - echo "Running PHPCS test"
    - src/vendor/bin/phpcs --standard=src/fossy-ruleset.xml src/lib/php/*/ src/www/ui/page/ src/www/ui/async/ src/spdx2 src/monk 

PhpUnit-test:
  type : test
  script:
    - make 
    - wget https://github.com/spdx/tools/releases/download/v2.1.0/SPDXTools-v2.1.0.zip
    - unzip SPDXTools-v2.1.0 && mv SPDXTools-v2.1.0/spdx-tools-2.1.0-jar-with-dependencies.jar src/spdx2/agent_tests/Functional/ 
    - rm -rf SPDXTools-v2.1.0*
    - src/vendor/bin/phpunit -c src/phpunit.xml

build_foss:
  type : build-package
  script: 
    - make
    - dpkg-buildpackage -I
    - pwd
    - mkdir packages  
    - cp ../*.deb packages/
  artifacts:
    expire_in: 1 day
    paths:
      - packages
